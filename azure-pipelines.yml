trigger:
- dev

variables:
  dockerRegistryServiceConnection: '142a9573-243d-4f78-b0f8-35555856e92e'
  imageRepository: 'entitiesservice'
  containerRegistry: 'scaiweuacrdev.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  imagePullSecret: docker-registry-creds
  tag: 'latest'
  vmImageName: ubuntu-latest

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@3
      displayName: Maven buld
      inputs:            
        mavenPomFile: 'pom.xml'
        javaHomeOption: 'JDKVersion'
        publishJUnitResults: false
        mavenAuthenticateFeed: false
        goals: 'clean install -DskipTests=true'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        arguments: --no-cache
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - upload: deployments
      artifact: deployments          
- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - deployment:
    condition: succeeded()
    displayName: Deploy to AKS
    pool:
      vmImage: $(vmImageName)
    environment: dev1
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              kubernetesServiceConnection: kubernetes
              namespace: dev
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: CmdLine@2
            inputs:
              script: 'cd $(Pipeline.Workspace)/deployments && ls -lrt'

          - task: KubernetesManifest@0
            displayName: Delete deployment
            inputs:
              kubernetesServiceConnection: kubernetes
              namespace: dev
              action: delete
              arguments: deployment entities-service
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              kubernetesServiceConnection: kubernetes
              namespace: dev
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/deployments/deployment.yaml
                $(Pipeline.Workspace)/deployments/service.yaml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)